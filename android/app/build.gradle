plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.desbrav.app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.desbrav.app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        multiDexEnabled true

        // Add environment variables for Supabase configuration
        // These can be set via flutter build command or CI/CD pipeline
        def supabaseUrl = project.hasProperty('SUPABASE_URL') ? project.property('SUPABASE_URL') : System.getenv('SUPABASE_URL') ?: ''
        def supabaseAnonKey = project.hasProperty('SUPABASE_ANON_KEY') ? project.property('SUPABASE_ANON_KEY') : System.getenv('SUPABASE_ANON_KEY') ?: ''
        
        buildConfigField "String", "SUPABASE_URL", "\"${supabaseUrl}\""
        buildConfigField "String", "SUPABASE_ANON_KEY", "\"${supabaseAnonKey}\""
        
        // Add manifest placeholders for better configuration
        manifestPlaceholders = [
            supabaseUrl: supabaseUrl,
            applicationLabel: "@string/app_name"
        ]
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "androidx.multidex:multidex:2.0.1"
}